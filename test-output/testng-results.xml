<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="4" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-27T12:23:42 IST" name="Suite" finished-at="2023-08-27T12:24:48 IST" duration-ms="65746">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.loginErrorValidation()[pri:0, instance:ShoppingApplication.Tests.ErrorValidationTest@126253fd]" name="loginErrorValidation" class="ShoppingApplication.Tests.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
    </groups>
    <test started-at="2023-08-27T12:23:42 IST" name="Error Validation Test" finished-at="2023-08-27T12:24:45 IST" duration-ms="63109">
      <class name="ShoppingApplication.Tests.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ShoppingApplication.Tests.ErrorValidationTest@126253fd]" started-at="2023-08-27T12:23:42 IST" name="launchApplication" finished-at="2023-08-27T12:24:36 IST" duration-ms="53602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:ShoppingApplication.Tests.ErrorValidationTest@126253fd]" started-at="2023-08-27T12:24:36 IST" name="loginErrorValidation" finished-at="2023-08-27T12:24:37 IST" duration-ms="1348" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email  password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email  password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at ShoppingApplication.Tests.ErrorValidationTest.loginErrorValidation(ErrorValidationTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:219)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ShoppingApplication.Tests.ErrorValidationTest@126253fd]" started-at="2023-08-27T12:24:37 IST" name="tearDown" finished-at="2023-08-27T12:24:38 IST" duration-ms="554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ShoppingApplication.Tests.ErrorValidationTest@126253fd]" started-at="2023-08-27T12:24:38 IST" name="launchApplication" finished-at="2023-08-27T12:24:42 IST" duration-ms="4543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:ShoppingApplication.Tests.ErrorValidationTest@126253fd]" started-at="2023-08-27T12:24:42 IST" name="loginErrorValidation" finished-at="2023-08-27T12:24:44 IST" duration-ms="2168" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email  password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email  password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at ShoppingApplication.Tests.ErrorValidationTest.loginErrorValidation(ErrorValidationTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:261)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ShoppingApplication.Tests.ErrorValidationTest@126253fd]" started-at="2023-08-27T12:24:45 IST" name="tearDown" finished-at="2023-08-27T12:24:45 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ShoppingApplication.Tests.ErrorValidationTest -->
    </test> <!-- Error Validation Test -->
    <test started-at="2023-08-27T12:23:42 IST" name="SubmitOrder Test" finished-at="2023-08-27T12:24:48 IST" duration-ms="65746">
      <class name="ShoppingApplication.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ShoppingApplication.Tests.SubmitOrderTest@45d84a20]" started-at="2023-08-27T12:23:42 IST" name="launchApplication" finished-at="2023-08-27T12:24:36 IST" duration-ms="53294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:ShoppingApplication.Tests.SubmitOrderTest@45d84a20]" started-at="2023-08-27T12:24:36 IST" name="submitOrder" data-provider="getData" finished-at="2023-08-27T12:24:41 IST" duration-ms="5729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Root@1234, product=ZARA COAT 3, email=ashubgowda06@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ShoppingApplication.Tests.SubmitOrderTest@45d84a20]" started-at="2023-08-27T12:24:41 IST" name="tearDown" finished-at="2023-08-27T12:24:42 IST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ShoppingApplication.Tests.SubmitOrderTest@45d84a20]" started-at="2023-08-27T12:24:42 IST" name="launchApplication" finished-at="2023-08-27T12:24:46 IST" duration-ms="4576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistory(java.util.HashMap)[pri:0, instance:ShoppingApplication.Tests.SubmitOrderTest@45d84a20]" started-at="2023-08-27T12:24:46 IST" name="orderHistory" data-provider="getData" finished-at="2023-08-27T12:24:47 IST" depends-on-methods="ShoppingApplication.Tests.SubmitOrderTest.submitOrder" duration-ms="1212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Root@1234, product=ZARA COAT 3, email=ashubgowda06@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ShoppingApplication.Tests.SubmitOrderTest@45d84a20]" started-at="2023-08-27T12:24:47 IST" name="tearDown" finished-at="2023-08-27T12:24:48 IST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ShoppingApplication.Tests.SubmitOrderTest -->
    </test> <!-- SubmitOrder Test -->
  </suite> <!-- Suite -->
</testng-results>
